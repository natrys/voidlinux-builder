pkgname=emacs
version=28.0.50
_commit=d08568e6e923051ca2376c2e0e6e7a22b66a2f33
wrksrc=${pkgname}-${_commit}
revision=8
build_style=gnu-configure
configure_args="--with-file-notification=inotify --with-modules
 $(vopt_with jpeg) $(vopt_with tiff) $(vopt_with gif) $(vopt_with png)
 $(vopt_with xpm) $(vopt_with svg rsvg) $(vopt_with imagemagick) $(vopt_with json)
 $(vopt_with xml xml2) $(vopt_with gnutls) $(vopt_with sound) $(vopt_with m17n m17n-flt)
 $(vopt_with harfbuzz) $(vopt_with cairo) $(vopt_with lcms) $(vopt_with gmp)"
hostmakedepends="pkg-config autoconf texinfo tar"
makedepends="ncurses-devel libXaw-devel
 dbus-devel acl-devel zlib-devel
 $(vopt_if jpeg libjpeg-turbo-devel) $(vopt_if tiff tiff-devel)
 $(vopt_if gif giflib-devel) $(vopt_if png libpng-devel) $(vopt_if xpm libXpm-devel)
 $(vopt_if svg librsvg-devel) $(vopt_if imagemagick libmagick-devel) $(vopt_if json jansson-devel)
 $(vopt_if xml libxml2-devel) $(vopt_if gnutls gnutls-devel)
 $(vopt_if sound alsa-lib-devel) $(vopt_if m17n m17n-lib-devel)
 $(vopt_if harfbuzz harfbuzz-devel) $(vopt_if cairo cairo-devel)
 $(vopt_if lcms lcms2-devel) $(vopt_if gmp gmp-devel)"
depends="emacs-common-${version}_${revision}"
short_desc="GNU Emacs editor"
maintainer="Imran Khan <imrankhan@teknik.io>"
license="GPL-3.0-or-later"
homepage="http://www.gnu.org/software/emacs/"
distfiles="https://github.com/emacs-mirror/emacs/archive/${_commit}.tar.gz"
checksum=39b1a7b7e2e3725ad7abfdffd510ed45703bf070423b4ab1e96bdf223d93e23b
replaces="emacs>=0"
nocross=yes
nopie=yes

# Package build options
build_options="jpeg tiff gif png xpm svg xml imagemagick gnutls sound m17n json harfbuzz cairo lcms"
desc_option_xpm="Enable support for XPM images"
desc_option_sound="Enable support for sound"
desc_option_m17n="Enable support for m17n multilingual text processing"
build_options_default="jpeg tiff gif png xpm svg xml gnutls sound m17n json harfbuzz cairo imagemagick lcms gmp"

do_configure() {
	./autogen.sh
	./configure --with-x-toolkit=athena --without-toolkit-scroll-bars --without-ns \
    		--with-xft --without-dbus --without-gconf --without-gsettings --with-zlib \
		${configure_args}
}

do_build() {
	make ${makejobs}
}

do_install() {
	make DESTDIR=$DESTDIR install
	rm -f ${DESTDIR}/usr/bin/ctags
	rm -rf ${DESTDIR}/usr/lib
	rm -rf ${DESTDIR}/usr/share/icons
}

emacs-common_package() {
	short_desc+=" - common files"
	archs=noarch
	pkg_install() {
		vmove usr/share/emacs
		vmove usr/share/man
		vmove usr/share/info
		rm -f ${PKGDESTDIR}/usr/share/info/info.info.gz
		rm -f ${PKGDESTDIR}/usr/share/man/man1/ctags.1*
		rm -f ${PKGDESTDIR}/usr/share/info/info.info
		rm -rf ${PKGDESTDIR}/usr/share/applications
	}
}

